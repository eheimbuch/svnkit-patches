# HG changeset patch
# Parent 08309c51774e0b79d681caa5dac091c239f007a0
# Parent  f6234d3c269748bb823761aed01c300d49a2c8ca
fix error 500 path not found for urls with non url characters

diff -r f6234d3c2697 svnkit-dav/src/main/java/org/tmatesoft/svn/core/internal/server/dav/DAVRepositoryManager.java
--- a/svnkit-dav/src/main/java/org/tmatesoft/svn/core/internal/server/dav/DAVRepositoryManager.java	Mon Feb 06 13:39:37 2017 +0100
+++ b/svnkit-dav/src/main/java/org/tmatesoft/svn/core/internal/server/dav/DAVRepositoryManager.java	Mon Feb 06 13:41:29 2017 +0100
@@ -64,7 +64,7 @@
         myUserPrincipal = request.getUserPrincipal();
         myRepositoryRootDir = getRepositoryRootDir(request.getPathInfo());
         myResourcePathInfo = getResourcePathInfo(request);
-            
+        
         if (config.isUsingPBA()) {
             String path = null;
             if (!DAVHandlerFactory.METHOD_MERGE.equals(request.getMethod())) {
@@ -190,6 +190,7 @@
         String uri = DAVPathUtil.addLeadingSlash(url.getURIEncodedPath());
         if (uri.startsWith(getResourceContext())) {
             uri = uri.substring(getResourceContext().length());
+            uri = DAVPathUtil.addLeadingSlash(uri);
         } else {
             SVNErrorManager.error(SVNErrorMessage.create(SVNErrorCode.RA_DAV_REQUEST_FAILED, "Invalid URL ''{0}'' requested", url.toString()), 
                     SVNLogType.NETWORK);
@@ -267,6 +268,8 @@
         String pathInfo = request.getPathInfo();
         if (pathInfo == null || "".equals(pathInfo)) {
             pathInfo = "/";
+        } else {
+          pathInfo = SVNEncodingUtil.uriDecode(pathInfo);
         }
         
         if (getDAVConfig().isUsingRepositoryPathDirective()) {
@@ -299,7 +302,7 @@
                 }
                 requestContext = SVNPathUtil.append(requestContext, servletPath);
             }
-            return SVNEncodingUtil.uriEncode(requestContext);
+            return encodeRequestContext(requestContext);
         }
         
         String reposName = DAVPathUtil.head(pathInfo);
@@ -309,9 +312,13 @@
             }
             String pathToRepos = SVNPathUtil.append(requestContext, servletPath);
             requestContext = SVNPathUtil.append(pathToRepos, reposName);
-            return SVNEncodingUtil.uriEncode(requestContext);
+            return encodeRequestContext(requestContext);
         }
         requestContext = DAVPathUtil.append(requestContext, reposName);
-        return SVNEncodingUtil.uriEncode(requestContext);
+        return encodeRequestContext(requestContext);
+    }
+
+    private String encodeRequestContext(String requestContext){
+        return SVNEncodingUtil.uriEncode( DAVPathUtil.addLeadingSlash(requestContext) );
     }
 }
diff -r f6234d3c2697 svnkit-dav/src/main/java/org/tmatesoft/svn/core/internal/server/dav/handlers/DAVResponse.java
--- a/svnkit-dav/src/main/java/org/tmatesoft/svn/core/internal/server/dav/handlers/DAVResponse.java	Mon Feb 06 13:39:37 2017 +0100
+++ b/svnkit-dav/src/main/java/org/tmatesoft/svn/core/internal/server/dav/handlers/DAVResponse.java	Mon Feb 06 13:41:29 2017 +0100
@@ -11,6 +11,7 @@
  */
 package org.tmatesoft.svn.core.internal.server.dav.handlers;
 
+import org.tmatesoft.svn.core.internal.util.SVNEncodingUtil;
 
 /**
  * @version 1.1.2
@@ -25,7 +26,8 @@
     
     public DAVResponse(String description, String href, DAVResponse nextResponse, DAVPropsResult propResult, int statusCode) {
         myDescription = description;
-        myHref = href;
+        // encode href
+        myHref = SVNEncodingUtil.uriEncode(href);
         myNextResponse = nextResponse;
         myStatusCode = statusCode;
         myPropResult = propResult;
